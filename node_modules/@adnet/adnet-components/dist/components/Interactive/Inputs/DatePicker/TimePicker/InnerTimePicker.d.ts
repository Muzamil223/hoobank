import { ChangeEvent, Dispatch, RefObject, SetStateAction } from 'react';
declare function InnerTimePicker(props: {
    value?: Date | null;
    onClick?: (e: {
        event: ChangeEvent<HTMLInputElement>;
        value: Date;
    }) => void;
    timeText: string | undefined;
    setTimeText: Dispatch<SetStateAction<string | undefined>>;
    disabled?: boolean;
}): import("react/jsx-runtime").JSX.Element;
export declare function HeaderTimePicker(props: {
    value?: Date | null;
    onClick?: (e: {
        event: ChangeEvent<HTMLInputElement>;
        value: Date;
    }) => void;
    timeText: string | undefined;
    setTimeText: Dispatch<SetStateAction<string | undefined>>;
    headerTimeInputRef: RefObject<HTMLInputElement>;
    disabled?: boolean;
    handleKeyDown?: (e: React.KeyboardEvent<HTMLInputElement>) => void;
}): import("react/jsx-runtime").JSX.Element;
export default InnerTimePicker;
